<canvas></canvas>

<script>
  import {
    renderEnvironment,
    scene,
    updateSceneSize,
    physicalObjectsStatic,
  } from "./logic/renderEnvironment.ts"

  import { dice } from "./3dObjects/Dice.ts"
  import { board } from "./3dObjects/Board.ts"
  import { table } from "./3dObjects/Table.ts"
  import { boardGamePiece } from "./3dObjects/BoardGamePiece"
  import { jigsaw } from "./complexObjects/Jigsaw.ts"
  import { cardDeck } from "./complexObjects/CardDeck"
  import { jigsawAssemble } from "./logic/jigsawAssemble.ts"
  import { boardGame } from "./logic/boardGame.ts"
  import { boardGameBundle } from "./complexObjects/BoardGameBundle"
  import { cardGame } from "./logic/cardGame"
  import {
    gameCard,
    yellowCard,
    blueCard,
    greenCard,
  } from "./3dObjects/GameCard"
  import Card from "./Card.astro"
  import { cameraPositionScroll } from "./logic/cameraPositionScroll"
  import { welcomeScreenAnimation } from "./logic/welcomeScreenAnimation"

  window.addEventListener("resize", updateSceneSize)

  const Table = table()
  // const Dice = dice()
  const Jigsaw = jigsaw()
  // const Board = board()
  // const gamePiece = boardGamePiece()
  // const CardDeck = cardDeck()
  // const BoardGameBundle = boardGameBundle()

  // physicalObjectsStatic.push(Table)
  // Jigsaw.forEach((piece) => scene.add(piece.model))

  renderEnvironment()

  cameraPositionScroll()

  welcomeScreenAnimation()
  // cardGame(CardDeck)
  // boardGame(BoardGameBundle)
  // jigsawAssemble(Jigsaw)
</script>

<style>
  canvas {
    position: sticky;
    top: 0;
    left: 0;
    width: 100%;
    grid-row: 1;
    grid-column: 1/-1;
    /* height: 400vh; */
    /* flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: sans-serif; */
    /* z-index: -1; */
  }
</style>
