<div class="container">
  <canvas></canvas>
</div>

<script>
  import {
    renderEnvironment,
    updateSceneSize,
  } from "./logic/renderEnvironment.ts"

  import { dice } from "./3dObjects/Dice.ts"
  import { board } from "./3dObjects/Board.ts"
  import { table } from "./3dObjects/Table.ts"
  import { boardGamePiece } from "./3dObjects/BoardGamePiece"
  import { jigsaw } from "./complexObjects/Jigsaw.ts"
  import { cardDeck } from "./complexObjects/CardDeck"
  import { jigsawAssemble } from "./logic/jigsawAssemble.ts"
  import { boardGame } from "./logic/boardGame.ts"
  import { boardGameBundle } from "./complexObjects/BoardGameBundle"
  import type { PhysicalObject } from "../types/3dObjects"
  import { cardGame } from "./logic/cardGame"

  window.addEventListener("resize", updateSceneSize)

  const Table = table()
  // const Dice = dice()
  // const Jigsaw = jigsaw()
  // const Board = board()
  // const gamePiece = boardGamePiece()
  const CardDeck = cardDeck()
  // const BoardGameBundle = boardGameBundle()

  renderEnvironment({
    staticObjects: [Table],
    // objects: [gamePiece],
    objectArrays: [CardDeck],
  })
  cardGame(CardDeck)
  // boardGame(BoardGameBundle)
  // jigsawAssemble(Jigsaw)
</script>

<style>
  .container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: sans-serif;
  }

  canvas {
    position: absolute;
    top: 0;
    left: 0;
  }
</style>
